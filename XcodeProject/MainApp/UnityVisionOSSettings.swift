// GENERATED BY BUILD
import Foundation
import SwiftUI
import PolySpatialRealityKit

extension UnityPolySpatialApp {
    func initialWindowName() -> String { return "Unbounded" }

    @SceneBuilder
    var mainScene: some Scene {

        ImmersiveSpace(id: "Unbounded", for: UUID.self) { uuid in
            PolySpatialContentViewWrapper()
                .environment(\.pslWindow, PolySpatialWindow(uuid.wrappedValue, "Unbounded", .init(1.000, 1.000, 1.000)))
        } defaultValue: { UUID() } 

        WindowGroup(id: "Bounded-1.000x1.000x1.000", for: UUID.self) { uuid in
            PolySpatialContentViewWrapper()
                .environment(\.pslWindow, PolySpatialWindow(uuid.wrappedValue, "Bounded-1.000x1.000x1.000", .init(1.000, 1.000, 1.000)))
        } defaultValue: { UUID() } .windowStyle(.volumetric).defaultSize(width: 1.000, height: 1.000, depth: 1.000, in: .meters)

        ImmersiveSpace(id: "Unbounded", for: UUID.self) { uuid in
            PolySpatialContentViewWrapper()
                .environment(\.pslWindow, PolySpatialWindow(uuid.wrappedValue, "Unbounded", .init(1.000, 1.000, 1.000)))
        } defaultValue: { UUID() } 

        WindowGroup(id: "Bounded-1.000x1.000x1.000", for: UUID.self) { uuid in
            PolySpatialContentViewWrapper()
                .environment(\.pslWindow, PolySpatialWindow(uuid.wrappedValue, "Bounded-1.000x1.000x1.000", .init(1.000, 1.000, 1.000)))
        } defaultValue: { UUID() } .windowStyle(.volumetric).defaultSize(width: 1.000, height: 1.000, depth: 1.000, in: .meters)

        ImmersiveSpace(id: "Unbounded", for: UUID.self) { uuid in
            PolySpatialContentViewWrapper()
                .environment(\.pslWindow, PolySpatialWindow(uuid.wrappedValue, "Unbounded", .init(1.000, 1.000, 1.000)))
        } defaultValue: { UUID() } 

    }
}
